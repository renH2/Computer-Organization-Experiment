////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mux4to14b.vf
// /___/   /\     Timestamp : 08/13/2020 23:52:01
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/multi_cycle/ipcore_dir -intstyle ise -family kintex7 -verilog D:/multi_cycle/Mux4to14b.vf -w D:/multi_cycle/Mux4to14b.sch
//Design Name: Mux4to14b
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mux4to14b(I0, 
                 I1, 
                 I2, 
                 I3, 
                 s, 
                 o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_16;
   wire XLXN_20;
   wire XLXN_24;
   wire XLXN_28;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_9));
   INV  XLXI_3 (.I(s[1]), 
               .O(XLXN_8));
   AND2  XLXI_6 (.I0(XLXN_9), 
                .I1(XLXN_8), 
                .O(XLXN_16));
   AND2  XLXI_7 (.I0(s[0]), 
                .I1(XLXN_8), 
                .O(XLXN_20));
   AND2  XLXI_8 (.I0(s[1]), 
                .I1(XLXN_9), 
                .O(XLXN_24));
   AND2  XLXI_9 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_28));
   AND2  XLXI_10 (.I0(I0[0]), 
                 .I1(XLXN_16), 
                 .O(XLXN_57));
   AND2  XLXI_11 (.I0(I1[0]), 
                 .I1(XLXN_20), 
                 .O(XLXN_58));
   AND2  XLXI_12 (.I0(I2[0]), 
                 .I1(XLXN_24), 
                 .O(XLXN_59));
   AND2  XLXI_13 (.I0(I3[0]), 
                 .I1(XLXN_28), 
                 .O(XLXN_60));
   AND2  XLXI_14 (.I0(I0[1]), 
                 .I1(XLXN_16), 
                 .O(XLXN_61));
   AND2  XLXI_15 (.I0(I1[1]), 
                 .I1(XLXN_20), 
                 .O(XLXN_62));
   AND2  XLXI_16 (.I0(I2[1]), 
                 .I1(XLXN_24), 
                 .O(XLXN_63));
   AND2  XLXI_17 (.I0(I3[1]), 
                 .I1(XLXN_28), 
                 .O(XLXN_64));
   AND2  XLXI_18 (.I0(I0[2]), 
                 .I1(XLXN_16), 
                 .O(XLXN_65));
   AND2  XLXI_19 (.I0(I1[2]), 
                 .I1(XLXN_20), 
                 .O(XLXN_66));
   AND2  XLXI_20 (.I0(I2[2]), 
                 .I1(XLXN_24), 
                 .O(XLXN_67));
   AND2  XLXI_22 (.I0(I3[2]), 
                 .I1(XLXN_28), 
                 .O(XLXN_68));
   AND2  XLXI_23 (.I0(I0[3]), 
                 .I1(XLXN_16), 
                 .O(XLXN_70));
   AND2  XLXI_24 (.I0(I1[3]), 
                 .I1(XLXN_20), 
                 .O(XLXN_71));
   AND2  XLXI_25 (.I0(I2[3]), 
                 .I1(XLXN_24), 
                 .O(XLXN_72));
   AND2  XLXI_26 (.I0(I3[3]), 
                 .I1(XLXN_28), 
                 .O(XLXN_73));
   OR4  XLXI_27 (.I0(XLXN_60), 
                .I1(XLXN_59), 
                .I2(XLXN_58), 
                .I3(XLXN_57), 
                .O(o[0]));
   OR4  XLXI_28 (.I0(XLXN_64), 
                .I1(XLXN_63), 
                .I2(XLXN_62), 
                .I3(XLXN_61), 
                .O(o[1]));
   OR4  XLXI_29 (.I0(XLXN_68), 
                .I1(XLXN_67), 
                .I2(XLXN_66), 
                .I3(XLXN_65), 
                .O(o[2]));
   OR4  XLXI_30 (.I0(XLXN_73), 
                .I1(XLXN_72), 
                .I2(XLXN_71), 
                .I3(XLXN_70), 
                .O(o[3]));
endmodule
